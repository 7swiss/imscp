#!/usr/bin/perl

=head1 NAME

 imscp-rkhunter - Process rkhunter(8) checks

=head1 SYNOPSIS

 imscp-rkhunter [OPTION]...

=cut

# i-MSCP - internet Multi Server Control Panel
# Copyright (C) 2010-2019 by Laurent Declercq <l.declercq@nuxwin.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

use strict;
use warnings;
use FindBin;
use File::Basename;
use lib "$FindBin::Bin/../../../../../PerlLib", "$FindBin::Bin/../../../../../PerlVendor";
use iMSCP::Boolean;
use iMSCP::Debug qw/ debug error getMessageByType newDebug setVerbose /;
use iMSCP::Bootstrapper;
use iMSCP::Execute 'execute';
use iMSCP::File;
use iMSCP::ProgramFinder;
use iMSCP::Mail 'sendErrorMessage';
use Try::Tiny;

newDebug( 'imscp-rkhunter.log' );

iMSCP::Getopt->parseNoDefault( sprintf( 'Usage: perl %s [OPTION]...', basename( $0 )) . qq{

Process rkhunter(8) checks.

OPTIONS:
 -d,    --debug         Enable debug mode.
 -v,    --verbose       Enable verbose mode.},
    'debug|d'   => \&iMSCP::Getopt::debug,
    'verbose|v' => \&iMSCP::Getopt::verbose
);

setVerbose( iMSCP::Getopt->verbose );

my $bootstrapper = iMSCP::Bootstrapper->getInstance();
exit unless $bootstrapper->lock( '/var/lock/imscp-rkhunter.lock', TRUE );
$bootstrapper->boot( {
    config_readonly => TRUE,
    nolock          => TRUE
} );

try {
    return unless my $bin = iMSCP::ProgramFinder::find( 'rkhunter' );

    my $logFile = $::imscpConfig{'RKHUNTER_LOG'} || '/var/log/rkhunter.log';
    my $stderr;
    execute( [ $bin, '--cronjob', '--logfile', $logFile ], undef, \$stderr );
    error( $stderr ) if $stderr;

    return unless -f $logFile;

    my $file = iMSCP::File->new( filename => $logFile );
    my $rs = $file->owner( $::imscpConfig{'ROOT_USER'}, $::imscpConfig{'IMSCP_GROUP'} );
    $rs ||= $file->mode( 0640 );
} catch {
    error( $_ );
} finally {
    if ( my @errors = getMessageByType( 'error', { remove => TRUE } ) ) {
        sendErrorMessage( "@errors" );
    }
};

=head1 AUTHOR

 Laurent Declercq <l.declercq@nuxwin.com>

=cut

1;
__END__
