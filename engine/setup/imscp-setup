#!/usr/bin/perl

# i-MSCP - internet Multi Server Control Panel
# Copyright (C) 2010-2013 by internet Multi Server Control Panel
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# @category		i-MSCP
# @copyright	2010-2013 by i-MSCP | http://i-mscp.net
# @author		Daniel Andreca <sci2tech@gmail.com>
# @link			http://i-mscp.net i-MSCP Home Site
# @license		http://www.gnu.org/licenses/gpl-2.0.html GPL v2

use strict;
use warnings;
use FindBin;
use lib "$FindBin::Bin/..", "$FindBin::Bin/../PerlLib", "$FindBin::Bin/../PerlVendor";

umask(027);

use iMSCP::Debug;
use iMSCP::Boot;
use iMSCP::Dialog;
use iMSCP::HooksManager;
use iMSCP::Getopt;

iMSCP::Getopt->parse('Usage: perl imscp-setup [options]');

# Get reconfigure option
$main::reconfigure = iMSCP::Getopt->reconfigure;

# Handle preseed option
%main::preseed = ();
my $preseedFile = iMSCP::Getopt->preseed;
if($preseedFile) {
	require $preseedFile;
	# Values from preseed file always override those already set.
	# The preseed option is not compatible with the reconfigure option.
	$main::reconfigure = 'none';
	undef $preseedFile;
}

# Handle the hook-file option
my $hookFile = iMSCP::Getopt->hookFile;
if($hookFile) {
	require $hookFile;
	undef $hookFile;
}

# handle noprompt option
$main::noprompt = iMSCP::Getopt->noprompt;

# In noninteractive mode (nonprompt option), we bypass the default
# exit handler (as provided by the iMSCP::Debug package) to  raise
# a specific error in case  an answer is wrong. An answer can be a
# wrong entry from an i-MSCP conffile, or from a preseed file in
# case the preseed option is involved.
iMSCP::HooksManager->getInstance->register(
	'beforeExit',
	sub {
		my $exitCode = shift;

		if($$exitCode == 5) { # We exit with status 5 from iMSCP::Dialog::Dialog in noninteractive mode
			$$exitCode = 1;
			if(iMSCP::Getopt->preseed) {
				fatal "Noninteractive mode: bad entry found in your preseed file."
			} else {
				fatal "Noninteractive mode: bad entry found in an i-MSCP configuration file."
			}
		} else {
			my $clearScreen = shift;
			$$clearScreen = 0; # Do not clear screen
		}
		0;
	}
) if $main::noprompt;

print STDOUT "Installation in progress... Please wait.\n" if $main::noprompt;

newDebug('imscp-setup.log');

require "$FindBin::Bin/imscp-setup-methods.pl";

# Start setup
sub setupStart
{
	# Bootstrap setup
	setupBoot() and return 1;

	# Load old i-MSCP config
	setupLoadOldConfig() and return 1;

	# Allow any server/addon to register its setup hook functions on the hooks manager before any other tasks
	setupRegisterHooks() and return 1;

	# Entering in silent mode
	silent(1);

	0;
}

# Process both setup dialog and tasks
sub setupEngine
{
	my $rs = 0;

	if(! $main::noprompt) {

	my $distribution = ucfirst(lc(iMSCP::LsbRelease->new()->getId(1)));
	my $dialog = iMSCP::Dialog->factory();

	$dialog->set('yes-label', 'Continue');
	$dialog->set('no-label', 'Abort');

		if ($dialog->yesno(
"
Welcome to \\Z1i-MSCP version $main::imscpConfig{'Version'}\\Zn setup dialog.

This program will install/update i-MSCP on your system. This dialog is your last chance to abort without do any change on your system.

\\Z3Warning:\\Zn Make sure you have read and performed all steps from the
         \\Zbdocs/$distribution/INSTALL\\Zn file.

   \\Z4Note:\\Zn During the setup process some or all services might require
         to be shutdown or restarted. Only services that are not set as
         '\\Zbno\\Zn' in your imscp.conf file will be processed by this program.
"
		)
		) {
			$dialog->msgbox("\nSetup process has been aborted...");
			exit 0;
		}
	}

	# Process setup dialog
	$rs |= setupDialog();

	# Process setup tasks
	$rs |= setupTasks();

	$rs;
}


sub setupShutDown
{
	return 0 if $main::noprompt;

	iMSCP::Dialog->factory()->msgbox(
"
\\Z1!!! Congratulation !!!\\Zn

i-MSCP '$main::imscpConfig{'Version'}' has been successfully reconfigured.

Please go to $main::imscpConfig{'BASE_SERVER_VHOST_PREFIX'}$main::imscpConfig{'BASE_SERVER_VHOST'} and log in with your administrator account.


Thanks for using i-MSCP.
"
	);

	0;
}

setupStart() and exit 1;

iMSCP::HooksManager->getInstance()->trigger('beforeSetup') and exit 1;

setupEngine() and exit 1;

iMSCP::HooksManager->getInstance()->trigger('afterSetup') and exit 1;

setupShutDown() and exit 1;

exit 0;
